version: '3.6'

services:

  postgres-prod:
    image: postgres:12
    restart: always
    volumes:
    - ./database/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine-prod:
    image: hasura/graphql-engine:v2.15.2
    ports:
    - "8080:8080"
    depends_on:
    - "postgres-prod"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  backend-prod:
    build:
      context: ./typescript
      dockerfile: ./packages/backend/Dockerfile.prod
    environment:
      TZ: Asia/Tokyo
    tty: true
    depends_on:
      - postgres-prod
    ports:
      - "3300:3300"
    volumes:
      - ./typescript:/app
      - /app/node_modules
      - /app/packages/backend/node_modules
      - /app/packages/backend/dist
